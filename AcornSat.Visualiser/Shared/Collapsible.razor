<div>
    <span @onclick="CollapserOnClick"
           class="collapser @(CollapserSize.ToString().ToLower()) @(ShowContent ? "content-shown" : "content-hidden" )">
        @if (ShowContent)
        {
            <span class="oi oi-chevron-bottom" aria-hidden="true"></span>
        }
        else
        {
            <span class="oi oi-chevron-right" aria-hidden="true"></span>    
        }

        @Title
    </span>
</div>

@if (ShowContent)
{
    <div class="@(ShadeBackground ? "collapsible-with-background" : "")">
        @Content
    </div>
}

@code {
    // CollapserSize is what an unfit person does when they try to Exercise
    public enum CollapserSizes
    {
        Normal,
        Large,
        ExtraLarge
    }

    [Parameter]
    public CollapserSizes CollapserSize { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter]
    public bool ShadeBackground { get; set; }

    [Parameter]
    public bool InitiallyShown { get; set; }

    [Parameter]
    public EventCallback<bool> OnShowOrHide { get; set; }

    bool ShowContent = true;

    protected override void OnInitialized()
    {
        ShowContent = InitiallyShown;

        base.OnInitialized();
    }

    void CollapserOnClick(EventArgs args)
    {
        ShowContent = !ShowContent;

        OnShowOrHide.InvokeAsync(ShowContent);
    }
}
