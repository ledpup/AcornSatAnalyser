<div class="@("collapsible-panel " + (ContentLayoutType == CollapserContentLayoutType.Block ? "block-layout" : "flexbox-column-layout") + (NoBottomMargin ? " no-bottom-margin" : ""))">
    @if (AllowCollapse)
    {
        <div>
            <span @onclick="CollapserOnClick"
                   class="collapser @(CollapserSize.ToString().ToLower()) @(ShowContent ? "content-shown" : "content-hidden" )">
                @if (ShowContent)
                {
                    <span class="oi oi-chevron-bottom" aria-hidden="true"></span>
                }
                else
                {
                    <span class="oi oi-chevron-right" aria-hidden="true"></span>    
                }

                @Title              
            </span>
            @HeaderContent
        </div>
    }

    @if (ShowContent)
    {
        <div class="@((ShadeBackground ? "collapsible-with-background " : " ") + (ContentLayoutType == CollapserContentLayoutType.Block ? "block-layout" : "flexbox-column-layout"))">
            @Content
        </div>
    }
</div>

@code {
    // CollapserSize is what an unfit person does when they try to Exercise
    public enum CollapserSizes
    {
        Normal,
        Large,
        ExtraLarge
    }

    public enum CollapserContentLayoutType
    {
        Block,
        FlexboxColumns
    }

    [Parameter]
    public CollapserContentLayoutType ContentLayoutType { get; set; }

    [Parameter]
    public CollapserSizes CollapserSize { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment HeaderContent { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter]
    public bool AllowCollapse { get; set; } = true;

    [Parameter]
    public bool ShadeBackground { get; set; }

    [Parameter]
    public bool InitiallyShown { get; set; }

    [Parameter]
    public EventCallback<bool> OnShowOrHide { get; set; }

    [Parameter]
    public bool NoBottomMargin { get; set; }

    bool ShowContent = true;

    protected override void OnInitialized()
    {
        ShowContent = InitiallyShown;

        base.OnInitialized();
    }

    void CollapserOnClick(EventArgs args)
    {
        ShowContent = !ShowContent;

        OnShowOrHide.InvokeAsync(ShowContent);
    }
}
