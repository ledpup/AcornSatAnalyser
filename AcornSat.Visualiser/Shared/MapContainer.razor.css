::deep #mapId {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: #aaa solid 2px;
    border-radius: 10px;
    margin-top: -16px;
    margin-right: -16px;
    margin-bottom: 0px;
}

/* The styles here (which position the map depending on screen width and whether the map has been "expanded" or not) dance around
   the styles in Index.razor.css which position the .location-info-container accordingly.

   The idea is:
     - when the screen's less than 1000px wide, the map appears at the top, full-width, followed by location info, full-width.
     - when the screen's more than 1000px wide, the location info section is at top-left, and the map is beside it at top-right. 
       Each takes up 50% of the width of the screen. The map floats itself right. The location & map pair are followed by a div
       that has clear: both so that subsequent content doesn't overlap with the map.
*/
@media only screen and (max-width: 1000px) {
    .mapContainer {
        position: absolute;
        top: 0px;
        left: 0px;
        right: 0px;
        bottom: 0px;
        z-index: 20;
    }
        .mapContainer.expanded {
            position: fixed;
            top: 0px;
            right: 0px;
            bottom: 0px;
            left: 0px;
        }

    .mapToggleExpanded {
        position: fixed;
        top: 0px;
        right: 0px;
        left: 0px;
        padding: 12px;
        text-align: right;
        z-index: 1000;
    }

    .mapToggleCollapsed {
        position: absolute;
        height: 50px;
        left: unset;
        right: 12px;
        top: 12px;
        text-align: right;
        z-index: 1000;
    }
}

@media only screen and (min-width: 1000px) {
    .mapContainer {
        position: absolute;
        top: 16px;
        right: 8px;
        left: 0px;
        bottom: 0px;
        z-index: 20;
    }

        .mapContainer.expanded {
            position: fixed;
            top: 0px;
            right: 0px;
            bottom: 0px;
            left: 0px;
        }

    .mapToggleExpanded {
        position: fixed;
        top: 0px;
        right: 0px;
        left: 0px;
        padding: 12px;
        text-align: right;
        z-index: 1000;
    }

    .mapToggleCollapsed {
        position: absolute;
        height: 50px;
        left: unset;
        right: 12px;
        top: 12px;
        text-align: right;
        z-index: 1000;
    }
}



::deep .mapToggleButton {
    background-color: #eee;
    color: #222;
    border: solid 2px #bbb;
    border-radius: 8px;
}

::deep .mapToggleButton:hover {
    background-color: #ccc;
    color: #222;
}