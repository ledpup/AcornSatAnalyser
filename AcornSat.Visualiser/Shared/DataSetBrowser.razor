@using AcornSat.Visualiser.UiModel
@using Blazorise
@using Blazorise.Components
@using Blazorise.Charts
@using static AcornSat.Core.Enums

<Collapsible Title="Add a dataset">
    <Content>
        @foreach (var f in RootFolders)
        {
            <div class="dataset-folder">
                <div class="dataset-folder-name">@f.Name</div>
                @foreach (var ds in f.DataSets)
                {
                    <div class="entry-list">
                        <a class="add-dataset" @onclick="() => AddDataSet(ds)"><span class="oi oi-plus" aria-hidden="true"></span></a> <span class="dataset-name">@ds.Name</span>
                    </div>
                }
            </div>
        }
    </Content>
</Collapsible>

@code {
    [Parameter]
    public EventCallback<DataSetLibraryEntry> OnAddDataSet { get; set; }

    List<DataSetLibraryFolder> RootFolders { get; set; } = 
        new List<DataSetLibraryFolder>
        {
            new DataSetLibraryFolder
            {
                Name = "Atmospheric gases",
                DataSets =
                    new List<DataSetLibraryEntry>()
                    {
                        new DataSetLibraryEntry()
                        {
                            Name = "CO₂",
                            SourceDataSetId = Guid.Parse("42c9195e-edc0-4894-97dc-923f9d5e72f0"),
                            DataAdjustment = DataAdjustment.Adjusted,
                            DataType = DataType.CO2
                        },
                        new DataSetLibraryEntry()
                        {
                            Name = "CH₄",
                            SourceDataSetId = Guid.Parse("2debe203-cbaa-4015-977c-2f40e2782547"),
                            DataAdjustment = DataAdjustment.Adjusted,
                            DataType = DataType.CH4
                        },
                        new DataSetLibraryEntry()
                        {
                            Name = "N₂O",
                            SourceDataSetId = Guid.Parse("6e84e743-3c77-488f-8a1c-152306c3d6f0"),
                            DataAdjustment = DataAdjustment.Adjusted,
                            DataType = DataType.N2O
                        }
                    }
            },
            new DataSetLibraryFolder
            {
                Name = "ENSO",
                DataSets =
                    new List<DataSetLibraryEntry>()
                    {
                        new DataSetLibraryEntry()
                        {
                            Name = "MEI.v2",
                            SourceDataSetId = Guid.Parse("ffd5f5e2-d8df-4779-a7f4-f5d148505033"),
                            DataAdjustment = DataAdjustment.Unadjusted,
                            DataType = DataType.MEIv2
                        }
                    }
            }

        };

    async void AddDataSet(DataSetLibraryEntry dle)
    {
        await OnAddDataSet.InvokeAsync(dle);
    }
}
