@using AcornSat.Core.ViewModel
@using AcornSat.Visualiser.UiModel
@using Blazorise
@using Blazorise.Components
@using Blazorise.Charts
@using ClimateExplorer.Core.DataPreparation
@using static AcornSat.Core.Enums

<div class="suggested-data-set-list">
    @foreach (var s in SuggestedPresets)
    {
        @if (s.MenuExpanded)
        {
            <div class="modal-underlay" @onclick="() => s.MenuExpanded = false"></div>
        }

        <div class="@CalculateClassForSuggestedDataSetElement(s)">
            <div class="main" @onclick="() => OnChartPresetSelected.InvokeAsync(s.ChartSeriesList)">
                <div class="title">@s.Title</div>
                <div class="description">@s.Description</div>
                @if (s.MissingChartSeries)
                {
                    <div class="missing-chart-series"><i class="fas fa-info-circle"></i> Some data not available for this location</div>
                }
            </div>

            @if (s.Variants != null && s.Variants.Count > 0)
            {
                <div class="expander" @onclick="() => s.MenuExpanded = !s.MenuExpanded">
                    <span class="oi oi-chevron-bottom" aria-hidden="true"></span>
                </div>
            }

            @if (s.MenuExpanded)
            {
                <div class="menu">
                    @if (s.Variants != null)
                    {
                        foreach (var v in s.Variants)
                        {
                            <div class="main" @onclick="() => OnChartPresetSelected.InvokeAsync(v.ChartSeriesList)">
                                <div class="title">@v.Title</div>
                                <div class="description">@v.Description</div>
                                @if (v.MissingChartSeries)
                                {
                                    <div class="missing-chart-series"><i class="fas fa-info-circle"></i> Some data not available for this location</div>
                                }
                            </div>
                        }
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public IEnumerable<DataSetDefinitionViewModel> DataSetDefinitions { get; set; }

    [Parameter]
    public Location SelectedLocation { get; set; }

    [Parameter]
    public EventCallback<List<ChartSeriesDefinition>> OnChartPresetSelected { get; set; }

    [Parameter]
    public bool ExpandUpwards { get; set; }

    List<SuggestedChartPresetModelWithVariants> SuggestedPresets { get; set; }

    string CalculateClassForSuggestedDataSetElement(SuggestedChartPresetModel s)
    {
        string c = "suggested-data-set";

        if (s.MenuExpanded) c += " menu-expanded";

        if (ExpandUpwards) c += " expand-upwards";

        return c;
    }

    protected override async Task OnParametersSetAsync()
    {
        SuggestedPresets = new List<SuggestedChartPresetModelWithVariants>();

        if (SelectedLocation == null) return;

        (var dsdMaxAdjusted, var mdTempMax) = DataSetDefinitionViewModel.GetDataSetDefinitionAndMeasurement(DataSetDefinitions, SelectedLocation.Id, DataType.TempMax, DataAdjustment.Adjusted, true);
        (var dsdMaxUnadjusted, var mdTempMaxUnadjusted) = DataSetDefinitionViewModel.GetDataSetDefinitionAndMeasurement(DataSetDefinitions, SelectedLocation.Id, DataType.TempMax, DataAdjustment.Unadjusted, true);
        (var dsdRainfall, var mdRainfall) = DataSetDefinitionViewModel.GetDataSetDefinitionAndMeasurement(DataSetDefinitions, SelectedLocation.Id, DataType.Rainfall, null);
        (var dsdSolarRadiation, var mdSolarRadiation) = DataSetDefinitionViewModel.GetDataSetDefinitionAndMeasurement(DataSetDefinitions, SelectedLocation.Id, DataType.SolarRadiation, null);
            
        var dsdMeiV2 = DataSetDefinitions.Single(x => x.Id == Guid.Parse("ffd5f5e2-d8df-4779-a7f4-f5d148505033"));
        var mdMeiV2 = dsdMeiV2.MeasurementDefinitions.Single(x => x.DataType == DataType.MEIv2);

        SuggestedPresets.Add(
            new SuggestedChartPresetModelWithVariants()
            {
                Title = "Temperature + Rainfall",
                Description = "Smoothed maximum daily temperature and rainfall",
                ChartSeriesList =
                new List<ChartSeriesDefinition>()
                {
                    new ChartSeriesDefinition()
                    {
                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                        SourceSeriesSpecifications =
                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                            {
                                new ChartSeriesDefinition.SourceSeriesSpecification
                                {
                                    LocationId = SelectedLocation.Id,
                                    LocationName = SelectedLocation.Name,
                                    DataSetDefinition = dsdMaxAdjusted,
                                    MeasurementDefinition = mdTempMax,
                               }
                            },

                        Aggregation = SeriesAggregationOptions.Mean,
                        BinGranularity = BinGranularities.ByYear,
                        Smoothing = SeriesSmoothingOptions.MovingAverage,
                        SmoothingWindow = 20,
                        Value = SeriesValueOptions.Value,
                        Year = null
                    },
                    new ChartSeriesDefinition()
                    {
                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                        SourceSeriesSpecifications =
                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                            {
                                new ChartSeriesDefinition.SourceSeriesSpecification
                                {
                                    LocationId = SelectedLocation.Id,
                                    LocationName = SelectedLocation.Name,
                                    DataSetDefinition = dsdRainfall,
                                    MeasurementDefinition = mdRainfall,
                                }
                            },
                        Aggregation = SeriesAggregationOptions.Sum,
                        BinGranularity = BinGranularities.ByYear,
                        Smoothing = SeriesSmoothingOptions.MovingAverage,
                        SmoothingWindow = 20,
                        Value = SeriesValueOptions.Value,
                        Year = null
                    }
                }
            }
        );

        SuggestedPresets.Add(
            new SuggestedChartPresetModelWithVariants()
            {
                Title = "Temperature",
                Description = "Yearly view of average maximum daily temperature",
                ChartSeriesList =
                    new List<ChartSeriesDefinition>()
                    {
                        new ChartSeriesDefinition()
                        {
                            SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                            SourceSeriesSpecifications =
                                new ChartSeriesDefinition.SourceSeriesSpecification[]
                                {
                                    new ChartSeriesDefinition.SourceSeriesSpecification
                                    {
                                        LocationId = SelectedLocation.Id,
                                        LocationName = SelectedLocation.Name,
                                        DataSetDefinition = dsdMaxAdjusted,
                                        MeasurementDefinition = mdTempMax,
                                    }
                                },
                            Aggregation = SeriesAggregationOptions.Mean,
                            BinGranularity = BinGranularities.ByYear,
                            Smoothing = SeriesSmoothingOptions.None,
                            SmoothingWindow = 5,
                            Value = SeriesValueOptions.Value,
                            Year = null
                        }
                    },
                Variants =
                    new List<SuggestedChartPresetModel>()
                    {
                        new SuggestedChartPresetModel()
                        {
                            Title = "Plus trendline",
                            Description = "Adds a straight line, fit to the data",
                            ChartSeriesList =
                                new List<ChartSeriesDefinition>()
                                {
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxAdjusted,
                                                    MeasurementDefinition = mdTempMax,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = true,
                                        Smoothing = SeriesSmoothingOptions.None,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    }
                                }
                        },
                        new SuggestedChartPresetModel()
                        {
                            Title = "Plus moving average",
                            Description = "Adds a 5 year moving average",
                            ChartSeriesList =
                                new List<ChartSeriesDefinition>()
                                {
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxAdjusted,
                                                    MeasurementDefinition = mdTempMax,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        Smoothing = SeriesSmoothingOptions.None,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    },
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                            SourceSeriesSpecifications =
                                                new ChartSeriesDefinition.SourceSeriesSpecification[]
                                                {
                                                    new ChartSeriesDefinition.SourceSeriesSpecification
                                                    {
                                                        LocationId = SelectedLocation.Id,
                                                        LocationName = SelectedLocation.Name,
                                                        DataSetDefinition = dsdMaxAdjusted,
                                                        MeasurementDefinition = mdTempMax,
                                                    }
                                                },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        Smoothing = SeriesSmoothingOptions.MovingAverage,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    }
                                }
                        },
                        new SuggestedChartPresetModel()
                        {
                            Title = "Moving average only",
                            Description = "Shows only a 5 year moving average",
                            ChartSeriesList =
                                new List<ChartSeriesDefinition>()
                                {
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxAdjusted,
                                                    MeasurementDefinition = mdTempMax,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        Smoothing = SeriesSmoothingOptions.MovingAverage,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    }
                                }
                        },
                        new SuggestedChartPresetModel()
                        {
                            Title = "Temperature + solar radiation",
                            Description = "Shows yearly solar radiation and maximum temperature averages",
                            ChartSeriesList =
                                new List<ChartSeriesDefinition>()
                                {
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                            SourceSeriesSpecifications =
                                                new ChartSeriesDefinition.SourceSeriesSpecification[]
                                                {
                                                    new ChartSeriesDefinition.SourceSeriesSpecification
                                                    {
                                                        LocationId = SelectedLocation.Id,
                                                        LocationName = SelectedLocation.Name,
                                                        DataSetDefinition = dsdMaxUnadjusted,
                                                        MeasurementDefinition = mdTempMaxUnadjusted,
                                                    }
                                                },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = false,
                                        Smoothing = SeriesSmoothingOptions.None,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    },
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdSolarRadiation,
                                                    MeasurementDefinition = mdSolarRadiation,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = false,
                                        Smoothing = SeriesSmoothingOptions.None,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    }
                                }
                        }
                    }
            }
        );

        SuggestedPresets.Add(
            new SuggestedChartPresetModelWithVariants()
            {
                Title = "Temperature Anomaly",
                Description = "Yearly average maximum daily temperatures relative to the average of the whole dataset",
                ChartSeriesList =
                    new List<ChartSeriesDefinition>()
                    {
                        new ChartSeriesDefinition()
                        {
                            SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                            SourceSeriesSpecifications =
                                new ChartSeriesDefinition.SourceSeriesSpecification[]
                                {
                                    new ChartSeriesDefinition.SourceSeriesSpecification
                                    {
                                        LocationId = SelectedLocation.Id,
                                        LocationName = SelectedLocation.Name,
                                        DataSetDefinition = dsdMaxAdjusted,
                                        MeasurementDefinition = mdTempMax,
                                    }
                                },
                            Aggregation = SeriesAggregationOptions.Mean,
                            BinGranularity = BinGranularities.ByYear,
                            Smoothing = SeriesSmoothingOptions.None,
                            SmoothingWindow = 5,
                            Value = SeriesValueOptions.Anomaly,
                            Year = null,
                            DisplayStyle = SeriesDisplayStyle.Bar
                        }
                    }
            }
        );

        SuggestedPresets.Add(
            new SuggestedChartPresetModelWithVariants()
            {
                Title = "Adjusted vs raw",
                Description = "Compare temperature values that have been adjusted for abormalities with raw data",
                ChartSeriesList =
                    new List<ChartSeriesDefinition>()
                    {
                        new ChartSeriesDefinition()
                        {
                            SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                            SourceSeriesSpecifications =
                                new ChartSeriesDefinition.SourceSeriesSpecification[]
                                {
                                    new ChartSeriesDefinition.SourceSeriesSpecification
                                    {
                                        LocationId = SelectedLocation.Id,
                                        LocationName = SelectedLocation.Name,
                                        DataSetDefinition = dsdMaxAdjusted,
                                        MeasurementDefinition = mdTempMax,
                                    }
                                },
                            Aggregation = SeriesAggregationOptions.Mean,
                            BinGranularity = BinGranularities.ByYear,
                            ShowTrendline = false,
                            Smoothing = SeriesSmoothingOptions.None,
                            SmoothingWindow = 5,
                            Value = SeriesValueOptions.Value,
                            Year = null
                        },
                        new ChartSeriesDefinition()
                        {
                            SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                            SourceSeriesSpecifications =
                                new ChartSeriesDefinition.SourceSeriesSpecification[]
                                {
                                    new ChartSeriesDefinition.SourceSeriesSpecification
                                    {
                                        LocationId = SelectedLocation.Id,
                                        LocationName = SelectedLocation.Name,
                                        DataSetDefinition = dsdMaxUnadjusted,
                                        MeasurementDefinition = mdTempMaxUnadjusted,
                                    }
                                },
                            Aggregation = SeriesAggregationOptions.Mean,
                            BinGranularity = BinGranularities.ByYear,
                            ShowTrendline = false,
                            Smoothing = SeriesSmoothingOptions.None,
                            SmoothingWindow = 5,
                            Value = SeriesValueOptions.Value,
                            Year = null
                        }
                    },
                Variants =
                    new List<SuggestedChartPresetModel>()
                    {
                        new SuggestedChartPresetModel()
                        {
                            Title = "Plus trendline",
                            Description = "Adds a straight line, fit to the data",
                            ChartSeriesList =
                                new List<ChartSeriesDefinition>()
                                {
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxAdjusted,
                                                    MeasurementDefinition = mdTempMax,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = true,
                                        Smoothing = SeriesSmoothingOptions.None,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    },
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxUnadjusted,
                                                    MeasurementDefinition = mdTempMaxUnadjusted,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = true,
                                        Smoothing = SeriesSmoothingOptions.None,
                                        SmoothingWindow = 5,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    }
                                }
                        },
                        new SuggestedChartPresetModel()
                        {
                            Title = "Moving average only",
                            Description = "Shows 10 year moving average for each dataset",
                            ChartSeriesList =
                                new List<ChartSeriesDefinition>()
                                {
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxAdjusted,
                                                    MeasurementDefinition = mdTempMax,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = false,
                                        Smoothing = SeriesSmoothingOptions.MovingAverage,
                                        SmoothingWindow = 10,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    },
                                    new ChartSeriesDefinition()
                                    {
                                        SeriesDerivationType = SeriesDerivationTypes.ReturnSingleSeries,
                                        SourceSeriesSpecifications =
                                            new ChartSeriesDefinition.SourceSeriesSpecification[]
                                            {
                                                new ChartSeriesDefinition.SourceSeriesSpecification
                                                {
                                                    LocationId = SelectedLocation.Id,
                                                    LocationName = SelectedLocation.Name,
                                                    DataSetDefinition = dsdMaxUnadjusted,
                                                    MeasurementDefinition = mdTempMaxUnadjusted,
                                                }
                                            },
                                        Aggregation = SeriesAggregationOptions.Mean,
                                        BinGranularity = BinGranularities.ByYear,
                                        ShowTrendline = false,
                                        Smoothing = SeriesSmoothingOptions.MovingAverage,
                                        SmoothingWindow = 10,
                                        Value = SeriesValueOptions.Value,
                                        Year = null
                                    }
                                }
                        }
                    }
            }
        );

        // Presets may call for data that is not available at all locations. In those
        // cases, remove the ChartSeries entries that aren't available & set a flag
        // on the preset so that an indicator can be shown to the user.
        foreach (var p in SuggestedPresets)
        {
            p.MissingChartSeries = false;

            foreach (var csd in p.ChartSeriesList.ToArray())
            {
                if (csd.SourceSeriesSpecifications.Any(x => x.MeasurementDefinition == null))
                {
                    p.ChartSeriesList.Remove(csd);

                    p.MissingChartSeries = true;
                }
            }

            if (p.Variants != null)
            {
                foreach (var v in p.Variants)
                {
                    v.MissingChartSeries = false;

                    foreach (var csd in v.ChartSeriesList.ToArray())
                    {
                        if (csd.SourceSeriesSpecifications.Any(x => x.MeasurementDefinition == null))
                        {
                            v.ChartSeriesList.Remove(csd);

                            v.MissingChartSeries = true;
                        }
                    }
                }
            }
        }
    }
}