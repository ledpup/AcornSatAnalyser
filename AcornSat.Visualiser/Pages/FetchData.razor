@page "/fetchdata"
@using Blazorise
@using Blazorise.Components

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>


<Column ColumnSize="ColumnSize.Is3">
    <Autocomplete TItem="Year"
            TValue="short"
            Data="@DataYears"
            TextField="@((item) => item.Text)"
            ValueField="@((item) => item.Value)"
            Placeholder="Search..."
            Multiple
            FreeTyping
            SelectedValuesChanged="@OnSelectedValuesChanged"
            SelectedValues="@multipleSelectionData"
            SelectedTexts="@multipleSelectionTexts"
    >
        <NotFoundContent>@context was not found</NotFoundContent>
    </Autocomplete>
</Column>

<Field Horizontal="true">
    <FieldBody ColumnSize="ColumnSize.Is12">
        Selected Values: @string.Join(',', multipleSelectionData)
    </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is12">
        Selected Texts: @string.Join(',', multipleSelectionTexts)
    </FieldBody>
</Field>

@code {
    public class Year
    {
        public string Text { get; set; }
        public short Value { get; set; }
    }

    List<Year> DataYears { get; set; }
    List<short> multipleSelectionData;
    List<string> multipleSelectionTexts = new();

    async Task OnSelectedValuesChanged(List<short> values)
    {
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        //DataYears = new List<short> { 1930, 1931 };
        DataYears = new List<Year> { new Year { Text = "1930", Value = 1930 }, new Year { Text = "1931", Value = 1931 } };
        multipleSelectionData = new List<short> { 1930 };
        multipleSelectionTexts = multipleSelectionData.Select(x => x.ToString()).ToList();
    }
}
