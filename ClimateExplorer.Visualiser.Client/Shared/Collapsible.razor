@using Blazorise
@using ClimateExplorer.Core.Model

<div class="@("collapsible-panel " + (ContentLayoutType == CollapserContentLayoutTypes.Block 
                                                                ? "block-layout" 
                                                                : (ContentLayoutType == CollapserContentLayoutTypes.FlexboxColumns 
                                                                    ? "flexbox-column-layout" 
                                                                    : "flexbox-row-layout")) + (NoBottomMargin ? " no-bottom-margin" : ""))">
    @if (AllowCollapse)
{
    <span class="collapser @(CollapserSize.ToString().ToLower()) @(ShowContent ? "content-shown" : "content-hidden" )">
            <span @onclick="CollapserOnClick">
            @if (ShowContent)
        {
            <span class="oi oi-chevron-bottom @(CollapserSize.ToString().ToLower())" aria-hidden="true"></span>
        }
        else
        {
            <span class="oi oi-chevron-right @(CollapserSize.ToString().ToLower())" aria-hidden="true"></span>
        }

            @if (ShowTitleWhenExpanded || !ShowContent)
        {
            <span class="title">
                    @Title
                    @if (FullTitle != null && Title != FullTitle)
                {
                    <span class="tooltip-content">
                            @FullTitle
                        </span>   
                }
                </span>
        }
            </span>
            @HeaderContent
        </span>
        
    
}

    @if (ShowContent)
{
    <div class="@((ShadeBackground ? "collapsible-with-background " : " ") + (ContentLayoutType == CollapserContentLayoutTypes.Block ? "block-layout" : "flexbox-column-layout"))">
            @Content
        </div>
}
</div>

@code {
// CollapserSize is what an unfit person does when they try to Exercise
public enum CollapserSizes
{
    Normal,
    Large,
    ExtraLarge
}

public enum CollapserContentLayoutTypes
{
    Block,
    FlexboxColumns,
    FlexboxRow
}

[Parameter]
public CollapserContentLayoutTypes ContentLayoutType { get; set; }

[Parameter]
public CollapserSizes CollapserSize { get; set; }

[Parameter]
public string? Title { get; set; }

[Parameter]
public string? FullTitle { get; set; }

[Parameter]
public RenderFragment? HeaderContent { get; set; }

[Parameter]
public RenderFragment? Content { get; set; }

[Parameter]
public bool AllowCollapse { get; set; } = true;

[Parameter]
public bool ShadeBackground { get; set; }

[Parameter]
public bool InitiallyShown { get; set; }

[Parameter]
public EventCallback<bool> OnShowOrHide { get; set; }

[Parameter]
public bool NoBottomMargin { get; set; }

[Parameter]
public bool ShowTitleWhenExpanded { get; set; }

public bool ShowContent = true;

protected override void OnInitialized()
{
    ShowContent = InitiallyShown;
    ShowTitleWhenExpanded = true;

    base.OnInitialized();
}

void CollapserOnClick(EventArgs args)
{
    ShowContent = !ShowContent;

    OnShowOrHide.InvokeAsync(ShowContent);
}
}
