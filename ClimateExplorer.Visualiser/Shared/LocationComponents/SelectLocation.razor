@using Blazorise
@using Blazorise.Components
@using ClimateExplorer.Core.Model;
@using GeoCoordinatePortable

<Modal @ref="modal">
    <ModalContent>
        <ModalHeader Background="Background.Light">
            <ModalTitle>Select location</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @if (SelectedLocation != null)
            {
                <Field>
                    Current location: <Strong>@SelectedLocation.Name</Strong>
                </Field>
            }
            <Field>
                <Button Clicked="@FireUseCurrentLocation" Color="Color.Primary">Near me</Button>

                @if (BrowserLocationErrorMessage != null)
                {
                    <div class="error-message">
                        @BrowserLocationErrorMessage
                    </div>
                }
            </Field>
            <Field> 
            </Field>
            <Field>
                <FieldLabel>Select a location from the list</FieldLabel>
                <SelectList
                    TItem="Location"
                    TValue="Guid"
                    Data="@Locations"
                    TextField="@((item)=>item.Name)"
                    ValueField="@((item)=>item.Id)"
                    SelectedValueChanged="@OnLocationChange"
                    DefaultItemText="Select location"
                    Style="width: 100%"
                    />
           </Field>
            @if (SelectedLocation != null)
            {
                <Field>
                    <FieldLabel>Select a nearby location</FieldLabel>
                    <Alert Color="Color.Secondary" Visible="true">
                        <Repeater Items="@SelectedLocation.NearbyLocations" >
                            <div>
                                <Blazorise.Link 
                                    Title="@context.LocationName" 
                                    To="#" 
                                    Clicked="@(()=>FireOnLocationChange(context.LocationId))">@context.LocationName</Blazorise.Link>

                                <span style="color: #888">
                                    @context.Distance km
                                    @context.CompassRoseDirection 
                                    <span style="display: inline-block; transform: rotate(@($"{context.BearingDegrees}deg"))">⭡</span>
                                </span>
                            </div>
                        </Repeater>
                    </Alert>
                </Field>
            }
        </ModalBody>
    </ModalContent>
</Modal>

@code {
    Modal? modal;

    [Parameter]
    public IEnumerable<Location> Locations { get; set; }

    [Parameter]
    public Location SelectedLocation { get; set; }

    [Parameter]
    public string? BrowserLocationErrorMessage { get; set; }

    [Parameter]
    public EventCallback<Guid> OnLocationChange { get; set; }

    [Parameter]
    public EventCallback SetCurrentLocation { get; set; }

    protected override void OnParametersSet()
    {
        if (Locations != null)
        {
            Locations = Locations.OrderBy(x => x.Name);    
        }
    }

    public Task Show()
    {
        return modal.Show();
    }
    public Task Hide()
    {
        return modal.Hide();
    }

    async Task FireUseCurrentLocation()
    {
        await SetCurrentLocation.InvokeAsync();
    }

    async Task FireOnLocationChange(Guid locationId)
    {
        await OnLocationChange.InvokeAsync(locationId);
    }
}
