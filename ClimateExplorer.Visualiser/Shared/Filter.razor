@using Blazorise
@using Blazorise.Components
@using static ClimateExplorer.Core.Enums
@using ClimateExplorer.Core.DataPreparation

<Modal @ref="filterModal">
    <ModalContent>
        <ModalHeader Background="Background.Light">
            <ModalTitle>Year filtering</ModalTitle>
            <div class="info-icon">
                <i class="fas fa-circle-info" style="cursor: pointer;" @onclick=ShowYearFilteringInfo></i>
            </div>
            <CloseButton />
        </ModalHeader>
        <ModalBody>

            <Field>
                <Check TValue="bool?" Checked="ShowRangeSlider" CheckedChanged="ShowRangeSliderChanged">Show range slider</Check>
            </Field>

            @if (SelectedBinGranularity == BinGranularities.ByYear || SelectedBinGranularity == BinGranularities.ByYearAndMonth)
            {
                <Field>
                    <strong>
                        Start Year
                    </strong>
                    <Tooltip Text="@UseMostRecentStartYearToolTip">
                        <Check TValue="bool" Checked="@UseMostRecentStartYear" CheckedChanged="@UseMostRecentStartYearChanged">@UseMostRecentStartYearLabel</Check>
                    </Tooltip>

                    @if (StartYearOptions != null)
                    {
                        <FieldLabel>
                            Or select a start year:
                        </FieldLabel>

                        <RadioGroup TValue="int" CheckedValue="@StartYearOption" CheckedValueChanged="@OnStartYearOptionChanged">
                            @foreach (var option in StartYearOptions)
                            {
                                <Radio Value="@option.Key">@option.Value</Radio>
                            }
                        </RadioGroup>
                    }
                    <FieldLabel>
                        Or enter a start year:
                    </FieldLabel>
                    <Validation Validator="ValidateYear">
                        <TextEdit Text="@SelectedStartYearInternal" MaskType="MaskType.RegEx" EditMask="^[\d]*$" MaxLength="4" TextChanged="OnStartYearTextChangedInternal">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </Validation>
                </Field>
                <Field>
                    <strong>End Year</strong>
                    <Validation Validator="ValidateYear">
                        <TextEdit Text="@SelectedEndYearInternal" MaskType="MaskType.RegEx" EditMask="^[\d]*$" MaxLength="4" TextChanged="OnEndYearTextChangedInternal" />
                    </Validation>
                </Field>
            }

            @if (PopupText != null)
            {
                <Modal @ref="popup">
                    <ModalContent Size="ModalSize.Large">
                        <ModalHeader>
                            <ModalTitle>Year filtering information</ModalTitle>
                            <CloseButton />
                        </ModalHeader>
                        <ModalBody>
                            @((MarkupString)PopupText)
                        </ModalBody>
                    </ModalContent>
                </Modal>
            }

        </ModalBody>
    </ModalContent>
</Modal>